SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

IF EXISTS(SELECT * FROM sys.objects WHERE type='P' AND name='USP_CONV_UOM') 
     DROP PROCEDURE [USP_CONV_UOM] 
GO

CREATE PROCEDURE [dbo].[USP_CONV_UOM] 
(
	@PT_NO VARCHAR(20),
	@SRC_UOM VARCHAR(3),
	@TRG_UOM VARCHAR(3),
	@SRC_QTY DECIMAL(18, 8),
	@TRG_QTY DECIMAL(18, 8) OUTPUT
) --WITH ENCRYPTION
AS 
BEGIN
	SET NOCOUNT ON

	BEGIN TRY
		IF @PT_NO IS NULL
		BEGIN
			RAISERROR(50001, 16, 1, 'USP_CONVERT_UOM', '@PT_NO') 
		END

		IF @SRC_UOM IS NULL
		BEGIN
			RAISERROR(50001, 16, 1, 'USP_CONVERT_UOM', '@SRC_UOM') 
		END

		IF @TRG_UOM IS NULL
		BEGIN
			RAISERROR(50001, 16, 1, 'USP_CONVERT_UOM', '@TRG_UOM') 
		END

		IF @SRC_QTY IS NULL
		BEGIN
			RAISERROR(50001, 16, 1, 'USP_CONVERT_UOM', '@SRC_QTY') 
		END

		IF NOT EXISTS(SELECT TOP 1 1 FROM MD_PART WHERE PT_NO = @PT_NO)
		BEGIN
			RAISERROR(60002, 16, 1, @PT_NO) 
		END

		IF NOT EXISTS(SELECT TOP 1 1 FROM MD_UOM WHERE UOM = @SRC_UOM)
		BEGIN
			RAISERROR(60003, 16, 1, @SRC_UOM) 
		END

		IF NOT EXISTS(SELECT TOP 1 1 FROM MD_UOM WHERE UOM = @TRG_UOM)
		BEGIN
			RAISERROR(60003, 16, 1, @TRG_UOM) 
		END
	
		IF @TRG_QTY IS NOT NULL
		BEGIN
			SET @TRG_QTY = NULL
		END

		SELECT @TRG_QTY = QTY2 * @SRC_QTY / QTY1
		  FROM MD_UOM_CONV 
		 WHERE PT_NO = @PT_NO
		   AND UOM1 = @SRC_UOM
		   AND UOM2 = @TRG_UOM

		IF @TRG_QTY IS NULL
		BEGIN
			SELECT @TRG_QTY = QTY1 * @SRC_QTY / QTY2
			  FROM MD_UOM_CONV 
			 WHERE PT_NO = @PT_NO
			   AND UOM1 = @TRG_UOM
			   AND UOM2 = @SRC_UOM
		END

		IF @TRG_QTY IS NULL
		BEGIN
			SELECT @TRG_QTY = QTY2 * @SRC_QTY / QTY1
			  FROM MD_UOM_CONV 
			 WHERE PT_NO IS NULL
			   AND UOM1 = @SRC_UOM
			   AND UOM2 = @TRG_UOM
		END

		IF @TRG_QTY IS NULL
		BEGIN
			SELECT @TRG_QTY = QTY1 * @SRC_QTY / QTY2
			  FROM MD_UOM_CONV 
			 WHERE PT_NO IS NULL
			   AND UOM1 = @TRG_UOM
			   AND UOM2 = @SRC_UOM
		END

		IF @TRG_QTY IS NULL
		BEGIN
			RAISERROR(60001, 16, 1, @PT_NO, @SRC_UOM, @TRG_UOM) 
		END
	END TRY
	BEGIN CATCH
		DECLARE @ERROR_MSG nvarchar(MAX) =  Error_Message()
		RAISERROR(60004, 16, 1, @ERROR_MSG) 
	END CATCH
END
GO