SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

IF EXISTS(SELECT * FROM sys.objects WHERE type='P' AND name='USP_BAT_NEXT_SEQ') 
     DROP PROCEDURE [USP_BAT_NEXT_SEQ] 
GO

CREATE PROCEDURE [dbo].[USP_BAT_NEXT_SEQ] 
(
	@SEQ_PREFIX VARCHAR(20), 
	@BAT_SIZE INT, 
	@NEXT_SEQ BIGINT OUTPUT 
) --WITH ENCRYPTION
AS 
BEGIN
	SET NOCOUNT ON 
	IF @BAT_SIZE <= 0
	BEGIN
		RAISERROR(50002, 16, 1) 
	END
	
	DECLARE @SEQ_TBL_NM VARCHAR(50) = 'SEQ_' + @SEQ_PREFIX

	IF NOT EXISTS(SELECT TOP 1 1 FROM sys.objects WHERE TYPE='U' AND name= @SEQ_TBL_NM)
	BEGIN
		DECLARE @CRT_TBL_STAT nvarchar(200) = 'CREATE TABLE ' + @SEQ_TBL_NM + '(ID BIGINT IDENTITY(1,1) NOT NULL)'
		EXEC sp_executesql @CRT_TBL_STAT
	END
	
    DECLARE @INS_STAT nvarchar(2000) = '
	DECLARE @TRNAS_CNT INT = @@TRANCOUNT
	
	IF @TRNAS_CNT > 0
	BEGIN
		SAVE TRAN SP_BAT_NEXT_SEQ
    END
    ELSE
    BEGIN
		BEGIN TRAN BAT_NEXT_SEQ
    END

	IF (EXISTS(SELECT TOP 1 1 FROM ' + @SEQ_TBL_NM + ' WITH(XLOCK)) OR 1 = 1) 
	BEGIN 
		INSERT INTO ' + @SEQ_TBL_NM + ' DEFAULT VALUES 
		SELECT @NEXT_SEQ = SCOPE_IDENTITY()
		SET @NEXT_SEQ = @NEXT_SEQ + @BAT_SIZE '

    set @BAT_SIZE = @BAT_SIZE - 1
    if @BAT_SIZE > 0
    begin
		set @INS_STAT = @INS_STAT + '
		SET IDENTITY_INSERT ' + @SEQ_TBL_NM + ' ON 
		INSERT INTO ' + @SEQ_TBL_NM + '(ID) VALUES(@NEXT_SEQ)
		SET IDENTITY_INSERT ' + @SEQ_TBL_NM + ' OFF '
    end
	set @INS_STAT = @INS_STAT + '
	END

	IF @TRNAS_CNT > 0
	BEGIN
		ROLLBACK TRAN SP_BAT_NEXT_SEQ
    END
    ELSE
    BEGIN
		ROLLBACK TRAN BAT_NEXT_SEQ
	END'
    
	EXEC sp_executesql @INS_STAT, '@BAT_SIZE INT, @NEXT_SEQ BIGINT OUTPUT', @BAT_SIZE, @NEXT_SEQ OUTPUT
END
