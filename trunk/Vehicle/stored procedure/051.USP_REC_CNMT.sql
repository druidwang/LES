SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

IF EXISTS(SELECT * FROM sys.objects WHERE type='P' AND name='USP_REC_CNMT') 
     DROP PROCEDURE [USP_REC_CNMT] 
GO

CREATE PROCEDURE [dbo].[USP_REC_CNMT] 
(
	@VOU_NO VARCHAR(20),
	@ORD_NO VARCHAR(20),
	@ORD_TP CHAR(1),
	@DLV_NO VARCHAR(20),
	@EFF_DT DATE,
	@EFF_USR_CD VARCHAR(20)
) --WITH ENCRYPTION
AS 
BEGIN
	SET NOCOUNT ON

	DECLARE @ERROR_MSG NVARCHAR(MAX)
	DECLARE @DATETIME_NOW DATETIME
	DECLARE @UPD_CNT INT
	DECLARE @IS_BC BIT

	SET @DATETIME_NOW = GETDATE()

	IF @EFF_DT IS NULL
	BEGIN
		SET @EFF_DT = CONVERT(VARCHAR(10), @DATETIME_NOW, 120)
	END

	BEGIN TRY
		IF NOT EXISTS(SELECT TOP 1 1 FROM tempdb.sys.objects WHERE type = 'U' AND name LIKE '#TMP_REC_CNMT_INPUT')
		BEGIN
			SET @ERROR_MSG = '没有定义临时表#TMP_REC_CNMT_INPUT表。'
			RAISERROR(@ERROR_MSG, 16, 1) 

			--
			CREATE TABLE #TMP_REC_CNMT_INPUT (
				VOU_LN INT PRIMARY KEY,
				PUR_PL_ID INT,
				SUPPL_CD VARCHAR(20),
				ORD_LN INT,
				DLV_LN INT,
				PT_NO VARCHAR(20),
				UOM VARCHAR(3),
				BASE_UOM VARCHAR(3),
				UOM_CONV_RT DECIMAL(18, 8),
				CNMT_QTY DECIMAL(18, 8),
				VER INT
			)

			--
			CREATE TABLE #TMP_REC_CNMT_BC_INPUT (
				BAR_CD VARCHAR(20) PRIMARY KEY,
				VOU_LN INT,
				CNMT_QTY DECIMAL(18, 8)
			)
		END
		
		IF EXISTS(SELECT TOP 1 1 FROM tempdb.sys.objects WHERE type = 'U' AND name LIKE '#TMP_REC_CNMT_BC_INPUT')
		BEGIN  --按条码入库处理
			SET @IS_BC = 1
		END
		ELSE
		BEGIN  --按数量入库处理
			SET @IS_BC = 0
		END

		--记录需要更新的寄售库存记录数量
		SELECT @UPD_CNT = COUNT(1) FROM #TMP_REC_CNMT_INPUT WHERE VER IS NOT NULL

		--更新寄售库存表
		UPDATE A SET CNMT_QTY = A.CNMT_QTY + B.CNMT_QTY
		FROM CNMT_BN AS A INNER JOIN #TMP_REC_CNMT_INPUT AS B ON A.PUR_PL_ID = B.PUR_PL_ID AND A.VER = B.VER

		--如果已经更新的寄售库存表记录数量和@UPD_CNT不一致抛出错误
		IF (@@ROWCOUNT <> @UPD_CNT)
		BEGIN
			RAISERROR(N'数据已经被更新，请重试。', 16, 1)
		END
		
		--新增寄售库存表记录
		INSERT INTO CNMT_BN(PUR_PL_ID, SUPPL_CD, PT_NO, UOM, BASE_UOM, UOM_CONV_RT, CNMT_QTY, STL_QTY, VER)
		SELECT PUR_PL_ID, SUPPL_CD, PT_NO, UOM, BASE_UOM, UOM_CONV_RT, CNMT_QTY, 0, 1 
		FROM #TMP_REC_CNMT_INPUT WHERE VER IS NULL

		--记录寄售库存事务头
		INSERT INTO CNMT_TRANS(VOU_NO, ORD_NO, ORD_TP, DLV_NO, EFF_DT, IS_VD, CRT_DT, CRT_USR_CD)
		VALUES(@VOU_NO, @ORD_NO, @ORD_TP, @DLV_NO, @EFF_DT, 0, @DATETIME_NOW, @EFF_USR_CD)

		--记录寄售库存事务明细
		INSERT INTO CNMT_TRANS_DET(VOU_NO, VOU_LN, ORD_LN, DLV_LN, PUR_PL_ID, PT_NO, UOM, BASE_UOM, UOM_CONV_RT, CNMT_QTY)
		SELECT @VOU_NO, VOU_LN, ORD_LN, DLV_LN, PUR_PL_ID, PT_NO, UOM, BASE_UOM, UOM_CONV_RT, CNMT_QTY 
		FROM #TMP_REC_CNMT_INPUT

		IF @IS_BC = 1
		BEGIN
			--记录寄售库存事务条码明细
			INSERT INTO CNMT_TRANS_BC(VOU_NO, VOU_LN, BAR_CD, CNMT_QTY)
			SELECT @VOU_NO, B.VOU_LN, B.BAR_CD, B.CNMT_QTY
			FROM #TMP_REC_CNMT_INPUT AS A INNER JOIN #TMP_REC_CNMT_BC_INPUT AS B ON A.VOU_LN = B.VOU_LN

			--记录条码寄售信息
			INSERT INTO BAR_CD_CNMT(BAR_CD, PUR_PL_ID, CNMT_QTY, STL_QTY, VER)
			SELECT B.BAR_CD, A.PUR_PL_ID, B.CNMT_QTY, 0, 1
			FROM #TMP_REC_CNMT_INPUT AS A INNER JOIN #TMP_REC_CNMT_BC_INPUT AS B ON A.VOU_LN = B.VOU_LN
		END
	END TRY
	BEGIN CATCH
		SET @ERROR_MSG = N'程序执行时发生错误:' + ERROR_MESSAGE() + N'，行数：' + ERROR_LINE()
		RAISERROR(@ERROR_MSG, 16, 1) 
	END CATCH
END
GO