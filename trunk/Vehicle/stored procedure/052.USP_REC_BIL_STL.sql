SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

IF EXISTS(SELECT * FROM sys.objects WHERE type='P' AND name='USP_REC_BIL_STL') 
     DROP PROCEDURE [USP_REC_BIL_STL] 
GO

CREATE PROCEDURE [dbo].[USP_REC_BIL_STL] 
(
	@VOU_NO VARCHAR(20),
	@ORD_NO VARCHAR(20),
	@ORD_TP CHAR(1),
	@EFF_DT DATE,
	@CRT_USR_CD VARCHAR(20)
) --WITH ENCRYPTION
AS 
BEGIN
	SET NOCOUNT ON

	DECLARE @ERROR_MSG NVARCHAR(MAX)
	DECLARE @DATETIME_NOW DATETIME
	DECLARE @BIL_STL_ID INT
	DECLARE @IS_BC BIT
	DECLARE @UPD_CNT INT

	SET @DATETIME_NOW = GETDATE()

	IF @EFF_DT IS NULL
	BEGIN
		SET @EFF_DT = CONVERT(VARCHAR(10), @DATETIME_NOW, 120)
	END

	BEGIN TRY
		IF NOT EXISTS(SELECT TOP 1 1 FROM tempdb.sys.objects 
						WHERE type = 'U' AND name LIKE '#TMP_REC_BIL_STL_INPUT')
		BEGIN
			SET @ERROR_MSG = '没有定义临时表#TMP_REC_BIL_STL_INPUT表。'
			RAISERROR(@ERROR_MSG, 16, 1) 

			--
			CREATE TABLE #TMP_REC_BIL_STL_INPUT (
				VOU_LN INT PRIMARY KEY,
				ORD_LN INT,
				ORD_BOM_ID BIGINT,
				PUR_PL_ID INT,
				PT_NO VARCHAR(20),
				UOM VARCHAR(3),
				BASE_UOM VARCHAR(3),
				UOM_CONV_RT DECIMAL(18, 8),
				STL_QTY DECIMAL(18, 8)
			)

			--
			CREATE TABLE #TMP_REC_BIL_STL_BC_INPUT (
				BAR_CD VARCHAR(20),
				PUR_PL_ID INT,
				VOU_LN INT,
				STL_QTY DECIMAL(18, 8),
				VER INT
				CONSTRAINT [PK_TMP_REC_BIL_STL_BC_INPUT] PRIMARY KEY 
				(
					[BAR_CD] ASC,
					[PUR_PL_ID] ASC
				)
			)
		END

		IF EXISTS(SELECT TOP 1 1 FROM tempdb.sys.objects WHERE type = 'U' AND name LIKE '#TMP_REC_BIL_STL_BC_INPUT')
		BEGIN  --按条码入库处理
			SET @IS_BC = 1
		END
		ELSE
		BEGIN  --按数量入库处理
			SET @IS_BC = 0
		END

		INSERT INTO BIL_STL(VOU_NO, ORD_NO, ORD_TP, EFF_DT, CRT_DT, CRT_USR_CD)
		VALUES(@VOU_NO, @ORD_NO, @ORD_TP, @EFF_DT, @DATETIME_NOW, @CRT_USR_CD)
	
		INSERT INTO BIL_STL_DET(VOU_NO, VOU_LN, ORD_LN, ORD_BOM_ID, PUR_PL_ID, PT_NO, 
								UOM, BASE_UOM, UOM_CONV_RT, STL_QTY, BIL_STL_STAT, VER)
		SELECT @VOU_NO, VOU_LN, ORD_LN, ORD_BOM_ID, PUR_PL_ID, PT_NO, 
				UOM, BASE_UOM, UOM_CONV_RT, STL_QTY, 'A', 1
		FROM #TMP_REC_BIL_STL_INPUT

		IF @IS_BC = 1
		BEGIN
			SELECT @UPD_CNT = COUNT(1) FROM #TMP_REC_BIL_STL_BC_INPUT
			
			UPDATE A SET STL_QTY = A.STL_QTY + B.STL_QTY, IS_ACT = CASE WHEN A.CNMT_QTY = A.STL_QTY + B.STL_QTY THEN 1 ELSE 0 END, A.VER = A.VER + 1
			FROM BAR_CD_CNMT AS A INNER JOIN #TMP_REC_BIL_STL_BC_INPUT AS B ON A.BAR_CD = B.BAR_CD AND A.PUR_PL_ID = B.PUR_PL_ID AND A.VER = B.VER
		
			--如果已经更新的条码寄售表记录数量和@UPD_CNT不一致抛出错误
			IF (@@ROWCOUNT <> @UPD_CNT)
			BEGIN
				RAISERROR(N'数据已经被更新，请重试。', 16, 1)
			END
		END
	END TRY
	BEGIN CATCH
		SET @ERROR_MSG = N'程序执行时发生错误:' + ERROR_MESSAGE() + N'，行数：' + ERROR_LINE()
		RAISERROR(@ERROR_MSG, 16, 1) 
	END CATCH
END
GO